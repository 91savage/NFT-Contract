{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "These functions deal with verification of Merkle Trees proofs.  * The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.  * See `test/utils/cryptography/MerkleProof.test.js` for some examples.  * WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.",
			"methods": {}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KIP17Goxo.sol": "MerkleProof"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KIP17Goxo.sol": {
			"keccak256": "0x790636439a9c87c4e9a9c04745db6d909217ddfab370298f4e423d0579072727",
			"urls": [
				"bzz-raw://09850bfc0e0b8570d59201c82d371be2babaa301f143d2f2db446cc5bb03fdbf",
				"dweb:/ipfs/QmSwLBUp4WtGBGebNiABifnfQpmEbE8GLN9Qj1CYFoFoLx"
			]
		}
	},
	"version": 1
}